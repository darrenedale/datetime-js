name: Create release

# whenever a tag is created, build a release
on:
  push:
    tags: '*'

jobs:
  # build the package for all supported target and module combinations
  build-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [es2015, es2016, es2017, es2018, es2019, es2020, es2021, es2022]
        module: [commonjs, es2015, es2020, es2022, standalone]
        include:
          - target: esnext
            module: esnext
          - target: esnext
            module: standalone
    steps:
      - name: Install packages
        run: npm install typescript
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Build ${{ matrix.target }}/${{ matrix.module }}
        id: build
        uses: ./.github/actions/build
        with:
          target: ${{ matrix.target }}
          module: ${{ matrix.module }}
      - name: Add source files
        run: |
          if [ "standalone" != "${{ matrix.module }}" ]; then
            cp ./src/*.ts "${{ steps.build.outputs.build-path }}"/
          fi
      - name: Package ${{ matrix.target }}/${{ matrix.module }}
        run: |
          cd "${{ steps.build.outputs.build-path }}"
          zip -r "datetime-js-${{ matrix.target }}-${{ matrix.module }}.zip" * -x tsconfig.json
          tar -czf "datetime-js-${{ matrix.target }}-${{ matrix.module }}.tar.gz" --exclude tsconfig.json --exclude "datetime-js-${{ matrix.target }}-${{ matrix.module }}.zip" *
          cd -
      - name: Upload ${{ matrix.target }}/${{ matrix.module }}
        uses: actions/upload-artifact@v3
        with:
          name: datetime-js-${{ matrix.target }}-${{ matrix.module }}
          path: |
            ${{ steps.build.outputs.build-path }}/datetime-js-${{ matrix.target }}-${{ matrix.module }}.tar.gz
            ${{ steps.build.outputs.build-path }}/datetime-js-${{ matrix.target }}-${{ matrix.module }}.zip
          retention-days: 1

  # create a GitHub release
  create-release:
    runs-on: ubuntu-latest
    needs: build-packages
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  # upload the built packages as assets for the release
  upload-assets:
    runs-on: ubuntu-latest
    needs:
      - build-packages
      - create-release
    strategy:
      matrix:
        target: [es2015, es2016, es2017, es2018, es2019, es2020, es2021, es2022]
        module: [commonjs, es2015, es2020, es2022, standalone]
    steps:
      - name: Fetch build artifact ${{ matrix.target }}/${{ matrix.module }}
        uses: actions/download-artifact@v3
        with:
          name: datetime-js-${{ matrix.target }}-${{ matrix.module }}
      - name: Upload release ${{ github.ref }} build for ${{ matrix.target }}/${{ matrix.module }} as tarball
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload-url }}
          asset_path: ./datetime-js-${{ matrix.target }}-${{ matrix.module }}.tar.gz
          asset_name: datetime-js-${{ matrix.target }}-${{ matrix.module }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload release ${{ github.ref }} build for ${{ matrix.target }}/${{ matrix.module }} as zip
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create-release.outputs.upload-url }}
          asset_path: ./datetime-js-${{ matrix.target }}-${{ matrix.module }}.zip
          asset_name: datetime-js-${{ matrix.target }}-${{ matrix.module }}.zip
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ github.token }}
